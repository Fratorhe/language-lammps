# Rule number (2) says that after a number sign the line is a comment

# Rule number (1) says that if the last printable character of a line &
  (i.e. not whitespaces) is an ampersand the next line is considered to be &
  part of the command. Even if we are in the comments!

# Rule number (5) says that every line is &
  broken into words separated by whitespaces

# Rule number (6) says that the first word in the line is the command and &
  the following are arguments. The package only highlights valid commands and &
  diferenciate between simulation commands and control commands

variable apples equal 3

units metal

label eat

# Rule number (3) says that the line is scanned for $ signs as reference for &
  variables.
# FIXME: talk about the math mode, simulation commands and control command?

variable apples equal $(v_apples - 1)

# Rule number (7) says that you can use quotes to treat a bunch of words as a &
  single argument

print "I have ${apples} apples in my pocket!"

if ${apples} then "jump SELF eat" else "print ':('"

# if a then "print 'by'" else "jump checkpoint" FIXME: end up this

# NOTE: There are lots of things that still are broken &
                      (or are ugly) &
            (specially if you use ampersands!) &
          (do not use ampersands, they are ugly) &
              but it works more or less now
